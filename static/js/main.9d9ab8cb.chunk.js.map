{"version":3,"sources":["Components/HomePage/AddNewPlantButton/AddNewPlantButton.js","Components/SharedComponents/PlantShortDescription/PlantShortDescription.js","Components/SharedComponents/Common.js","Components/SharedComponents/PlantPhoto/PlantPhoto.js","Components/SharedComponents/PlantButtons/PlantButtons.js","Components/PlantListPage/PlantsList/PlantListElement/PlantMoreInfoButton/PlantMoreInfoButton.js","Components/PlantListPage/PlantsList/PlantListElement/PlantListElement.js","Components/PlantListPage/PlantsList/PlantsList.js","Context/auth.js","Components/PlantListPage/PlantListPage.js","Components/SharedComponents/AppLogo/AppLogo.js","Components/HomePage/HomePageBackground/HomePageBackground.js","Components/HomePage/FindByPlaceButton/FindByPlaceButton.js","Components/SharedComponents/LogoutButton/LogoutButton.js","Components/HomePage/HomePage.js","Components/PlantPage/AddNewPlantPhoto/AddNewPlantPhoto.js","Components/SharedComponents/GoHomeButton/GoHomeButton.js","Components/NewPlantPage/CreateNewPlantDto.js","Components/NewPlantPage/CustomInput/CustomInput.js","Components/PlantPage/PlantFullDescription/PlantFullDescription.js","Components/PlantPage/PlantPage.js","Components/Footer/Footer.js","Components/NewPlantPage/NewPlantPage.js","Components/FilterByPlacePage/PlaceTile/PlaceTile.js","Components/FilterByPlacePage/FindByPlacePage.js","Components/Auth/AuthForms/LoginForm/LoginForm.js","Components/Auth/Login/Login.js","Components/Auth/AuthForms/SignUpForm/SignUpForm.js","Components/Auth/SignUp/SignUp.js","Components/Auth/PrivateRoute/PrivateRoute.js","App.js","index.js"],"names":["AddNewPlantButton","className","to","moment","require","PlantShortDescription","plant","id","name","watering","nextTimeProcessed","format","spraing","feeding","place","PlantPhoto","props","fullDescriptionView","src","alt","PlantButtons","processType","axios","post","this","plantId","headers","then","res","plantProcessTriggered","catch","error","console","log","onClick","handlePlantProcessed","React","Component","PlantMoreInfoButton","PlantListElement","PlantsList","plants","map","key","AuthContext","createContext","useAuth","useContext","PlantListPage","state","fetchPlants","get","Authorization","context","authTokens","access_token","setState","data","filter","contextType","AppLogo","HomePageBackground","FindByPlaceButton","LogoutButton","setAuthTokens","HomePage","filterByPlace","location","AddNewPlantPhoto","GoHomeButton","intervalsMap","Map","CreateNewPlantDto","notes","wateringInterval","lastWatering","nextWatering","spraingInterval","lastSpraing","nextSpraing","feedingInterval","lastFeeding","nextFeeding","CustomInput","calendarIcon","value","onChange","PlantFullDescription","formatIntervalString","string","replace","toLowerCase","calculateNextAction","previousAction","actionInterval","add","updateAction","processName","nextAction","lastTimeProcessed","interval","handleProcessDateChange","date","process","toString","handleIntervalSelect","event","target","handleInput","nextProps","isEditOn","type","selected","Date","parse","placeholderText","maxDate","dateFormat","showTimeSelect","popperPlacement","customInput","submitUpdatedPlantForm","handleCancelButton","handleEditButton","handleDeleteButton","PlantPage","plantById","loaded","redirectToHome","fetchPlant","match","params","plantid","put","x","delete","Footer","Alert","elevation","variant","NewPlantPage","handleClick","open","handleClose","reason","defaultEmptyPlant","handleDateChange","checkAction","handleSubmit","preventDefault","fromNewPlantForm","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","onSubmit","placeholder","PlaceTile","pathname","img","FindByPlacePage","document","body","style","backgroundColor","LoginForm","useState","userEmail","setUserEmail","userPassword","setPassword","useForm","register","errors","backgroundImage","e","ref","required","pattern","email","password","Login","isLoggedIn","setLoggedIn","setOpen","referer","result","status","SignUpForm","userName","setUserName","getValues","minLength","role","validate","repeatPassword","message","SignUp","isSignedUp","setSignedUp","PrivateRoute","component","rest","render","App","existingTokens","JSON","localStorage","getItem","basename","Provider","setItem","stringify","clear","exact","path","defaults","baseURL","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9d9ab8cb.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './addNewPlantButton.scss';\n\nfunction AddNewPlantButton() {\n    return(\n        <button className=\"addNewPlantButton\"><Link to={\"/createNewPlant\"}>ADD NEW PLANT</Link></button>\n    )\n}\n\nexport default AddNewPlantButton;","import React from 'react';\nimport './plantShortDescription.scss';\nimport {defaultDateFormat} from \"../Common\";\n\nconst moment = require('moment');\n\nfunction PlantShortDescription({ plant }){\n    return(\n            <div className=\"plantDescription\">\n                <div className=\"row\">\n                    <div className=\"column first\">Id:</div>\n                    <div className=\"column\">{plant.id}</div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"column first\">Name:</div>\n                    <div className=\"column\">{plant.name}</div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"column first\">Next watering:</div>\n                    <div className=\"column\">{moment(plant.watering.nextTimeProcessed).format(defaultDateFormat)}</div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"column first\">Next spraing:</div>\n                    <div className=\"column\">{moment(plant.spraing.nextTimeProcessed).format(defaultDateFormat)}</div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"column first\">Next feeding:</div>\n                    <div className=\"column\">{moment(plant.feeding.nextTimeProcessed).format(defaultDateFormat)}</div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"column first\">Place:</div>\n                    <div className=\"column\">{plant.place}</div>\n                </div>\n            </div>\n    )\n}\n\nexport default PlantShortDescription;","export const defaultDateFormat = \"LLL\";","import React from \"react\";\nimport './plantPhoto.scss';\n\nfunction PlantPhoto(props){\n    return(\n        <div className={`plantPhoto__container ${ props.fullDescriptionView && 'largePhoto'}`}>\n            <img className=\"plantPhoto\" src=\"/plantsPhotos/monstera.png\" alt=\"\" />\n        </div>\n    )\n}\n\nexport default PlantPhoto;","import React from 'react';\nimport axios from 'axios';\n\nimport './plantButtons.scss';\n\n\nclass PlantButtons extends React.Component {\n\n    handlePlantProcessed(processType){\n        axios.post(`plants/${this.props.plantId}/${processType}`,\n            {},{ headers: { 'Content-Type': 'application/json' }})\n            .then(res => this.props.plantProcessTriggered())\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    render(){\n        return(\n                <div className=\"plantButtons-bar\">\n                    <button className=\"plantButton\" onClick={() => this.handlePlantProcessed('watering')}>\n                        <img src=\"/icons/watering-can.png\" alt=\"\" className={`${ this.props.fullDescriptionView && 'largeButton'}`}/>\n                    </button>\n                    <button className=\"plantButton\" onClick={() => this.handlePlantProcessed('spraing')}>\n                        <img src=\"/icons/water-sprayer.png\" alt=\"\" className={`${ this.props.fullDescriptionView && 'largeButton'}`}/>\n                    </button>\n                    <button className=\"plantButton\" onClick={() => this.handlePlantProcessed('feeding')}>\n                        <img src=\"/icons/bottle.png\" alt=\"\" className={`${ this.props.fullDescriptionView && 'largeButton'}`}/>\n                    </button>\n                </div>\n        )\n    }\n\n}\nexport default PlantButtons;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './plantMoreInfoButton.scss';\n\nfunction PlantMoreInfoButton({plant}){\n    return(\n        <button className=\"moreInfoButton\"><Link to={`/plantViewPage/${plant.id}`}>more...</Link></button>\n    )\n}\n\nexport default PlantMoreInfoButton;","import React from 'react';\n\nimport PlantShortDescription from '../../../SharedComponents/PlantShortDescription/PlantShortDescription';\nimport PlantPhoto from \"../../../SharedComponents/PlantPhoto/PlantPhoto\";\nimport PlantButtons from \"../../../SharedComponents/PlantButtons/PlantButtons\";\nimport PlantMoreInfoButton from \"./PlantMoreInfoButton/PlantMoreInfoButton\";\nimport './plantListElement.scss';\n\nfunction PlantListElement({ plant, plantProcessTriggered }){\n\n\n    return(\n        <div className=\"plantListElement\">\n            <div className=\"plantListElement__menu\">\n                <PlantPhoto />\n                <PlantButtons plantId={plant.id} plantProcessTriggered={plantProcessTriggered}/>\n            </div>\n            <PlantShortDescription plant={plant}/>\n            <PlantMoreInfoButton plant={plant}/>\n        </div>\n    )\n}\n\nexport default PlantListElement;","import React from 'react';\nimport PlantListElement from './PlantListElement/PlantListElement';\n\nfunction PlantsList ({ plants, plantProcessTriggered }){\n    return(\n        <div>\n            {plants.map(plant => ( <PlantListElement key={`${plant.name}${plant.id}`} plant={plant} plantProcessTriggered={plantProcessTriggered} />)) }\n        </div>\n    )\n}\n\nexport default PlantsList;","import { createContext, useContext} from 'react';\n\nexport const AuthContext = createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}","import React from \"react\";\nimport PlantsList from './PlantsList/PlantsList';\nimport axios from 'axios';\nimport {AuthContext} from \"../../Context/auth\";\n\nclass PlantListPage extends React.Component {\n\n    state = {\n        plants: []\n    }\n\n    static contextType = AuthContext;\n\n    fetchPlants = (place) => {\n        axios.get(`plants`, {\n            headers:\n                {\n                    Authorization: `Bearer ${this.context.authTokens.access_token}`\n                }\n        })\n            .then(res => {\n                    if (place) {\n                        this.setState({\n                            plants: res.data.filter(plant => plant.place === place)\n                        })\n                    } else {\n                        this.setState({\n                            plants: res.data\n                        })\n                    }\n                }\n            )\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    componentDidMount() {\n        this.fetchPlants(this.props.place)\n    }\n\n    render() {\n        const {plants} = this.state;\n        return (\n            <PlantsList plants={plants} plantProcessTriggered={() => this.fetchPlants(this.props.place)}/>\n        )\n    }\n}\n\nexport default PlantListPage;","import React from 'react';\nimport './styles.scss';\n\nfunction AppLogo(){\n    return(\n        <div className=\"AppLogo\">\n            <h1>PLANTSWIFE</h1>\n        </div>\n    )\n}\n\nexport default AppLogo;","import React from 'react';\n\nimport AppLogo from \"../../SharedComponents/AppLogo/AppLogo\";\nimport './styles.scss';\n\nfunction HomePageBackground () {\n    return(\n        <div className=\"homePage\">\n            <img className=\"homePageBackground\" src=\"plantsPhotos/plants2.jpg\" alt=\"\" />\n            <AppLogo />\n        </div>\n    )\n}\n\nexport default HomePageBackground;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './findByPlaceButton.scss';\n\nfunction FindByPlaceButton() {\n    return(\n        <button className=\"filterByPlace--button\"><Link to=\"/filterByPlace\">FIND BY PLACE</Link></button>\n    )\n}\n\nexport default FindByPlaceButton;","import React from \"react\";\nimport { useAuth } from '../../../Context/auth';\nimport './styles.scss';\n\n\nfunction LogoutButton(){\n\n    const { setAuthTokens } = useAuth();\n\n    function logOut(){\n        setAuthTokens();\n    }\n\n    return(\n        <div>\n            <button className=\"logoutButton\" onClick={logOut}>\n                <img alt=\"\" src=\"/../icons/logout.png\" />\n            </button>\n\n        </div>\n    )\n}\n\nexport default LogoutButton;","import React from 'react';\n\nimport AddNewPlantButton from './AddNewPlantButton/AddNewPlantButton';\nimport PlantListPage from \"../PlantListPage/PlantListPage\";\nimport HomePageBackground from \"./HomePageBackground/HomePageBackground\";\nimport FindByPlaceButton from \"./FindByPlaceButton/FindByPlaceButton\";\nimport LogoutButton from \"../SharedComponents/LogoutButton/LogoutButton\";\n\nclass HomePage extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <HomePageBackground/>\n                <AddNewPlantButton/>\n                <FindByPlaceButton/>\n                <LogoutButton />\n                <PlantListPage\n                    filterByPlace={this.props.location.state?.filterByPlace}\n                    place={this.props.location.state?.place}\n                />\n            </div>\n        )\n    }\n}\n\nexport default HomePage;","import React from \"react\";\nimport './addNewPlantPhoto.scss';\n\nfunction AddNewPlantPhoto() {\n    return(\n        <button className=\"addNewPlantPhotoButton\">\n            <img src=\"/icons/ar-camera.png\" alt=\"\"/>\n        </button>\n    )\n}\n\nexport default AddNewPlantPhoto;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport './goHomeButton.scss';\n\nfunction GoHomeButton(){\n    return(\n        <button className=\"goHomeButton\">\n            <Link to={`/`}>HOME</Link>\n        </button>\n    )\n}\n\nexport default GoHomeButton;","export const intervalsMap = new Map([\n    ['everyday', [1, 'd']],\n    ['onceAWeek', [1, 'w']],\n    ['twiceAWeek', [3, 'd']],\n    ['threeTimesAWeek', [2, 'd']],\n    ['onceAMonth', [1, 'M']]\n]);\n\nexport default class CreateNewPlantDto {\n    static fromNewPlantForm(plant) {\n        return {\n            \"name\": plant.name,\n            \"notes\": plant.notes,\n            \"place\": plant.place,\n            \"watering\": {\n                \"interval\": plant.wateringInterval,\n                \"lastTimeProcessed\": plant.lastWatering,\n                \"nextTimeProcessed\": plant.nextWatering\n            },\n            \"spraing\": {\n                \"interval\": plant.spraingInterval,\n                \"lastTimeProcessed\": plant.lastSpraing,\n                \"nextTimeProcessed\": plant.nextSpraing\n            },\n            \"feeding\": {\n                \"interval\": plant.feedingInterval,\n                \"lastTimeProcessed\": plant.lastFeeding,\n                \"nextTimeProcessed\": plant.nextFeeding\n            }\n        }\n    }\n}\n","import React from \"react\";\nimport './customInput.scss';\n\n\nclass CustomInput extends React.Component {\n    render() {\n        return (\n           <div className=\"calendar-icon__container\">\n               {\n                   this.props.calendarIcon\n                   ?\n                       <img src=\"/icons/calendar.png\" alt=\"\" className=\"calendar-icon\"/>\n                       :\n                       null\n               }\n               <input value={this.props.value} onChange={this.props.onChange} onClick={this.props.onClick}/>\n           </div>\n        )\n    }\n}\n\nexport default CustomInput;","import React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport {intervalsMap} from \"../../NewPlantPage/CreateNewPlantDto\";\nimport {defaultDateFormat} from \"../../SharedComponents/Common\";\nimport CustomInput from \"../../NewPlantPage/CustomInput/CustomInput\";\n\nimport '../../SharedComponents/PlantShortDescription/plantShortDescription.scss';\nimport './plantFullDescription.scss';\n\n\nconst moment = require('moment');\n\nclass PlantFullDescription extends React.Component{\n    state = {\n        plant: this.props.plant\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n            this.setState({\n                plant: nextProps.plant\n            });\n    }\n\n    formatIntervalString = (string) => {\n        return string.replace(/([a-zA-Z])(?=[A-Z])/g, '$1 ').toLowerCase();\n    }\n\n    calculateNextAction = (previousAction, actionInterval) => {\n        let nextAction;\n\n        nextAction = moment(previousAction).add(actionInterval[0], actionInterval[1]).format(defaultDateFormat);\n\n        return nextAction;\n    }\n\n    updateAction = (data, processName) => {\n        let nextAction = this.calculateNextAction(this.state.plant[processName].lastTimeProcessed, intervalsMap.get(this.state.plant[processName].interval));\n        this.setState({\n            plant: {\n                ...this.state.plant,\n                [processName]: {\n                    ...this.state.plant[processName],\n                    nextTimeProcessed: nextAction\n                }\n            }\n        })\n    }\n\n    handleProcessDateChange = (date, process) => {\n        date = date.toString();\n\n        this.setState({\n                plant: {\n                    ...this.state.plant,\n                    [process]: {\n                        ...this.state.plant[process],\n                        lastTimeProcessed: date\n                    }\n                }\n            }, () => {this.updateAction(this.state.plant, process)}\n        )\n    }\n\n    handleIntervalSelect = (event, process) => {\n        this.setState({\n                plant: {\n                    ...this.state.plant,\n                    [event.target.name]: {\n                        ...this.state.plant[event.target.name],\n                        interval: event.target.value\n                    }\n                }\n            }, () => {this.updateAction(this.state.plant, process)}\n        )\n    }\n\n    handleInput = (event) => {\n        this.setState({\n                plant: {\n                    ...this.state.plant,\n                    [event.target.name]: event.target.value\n                }\n            }\n        )\n    }\n\n    render(){\n        const {plant} = this.state;\n\n        return(\n            <div className=\"plantFullDescription\">\n                <div className=\"plantDescription\">\n                    <div className=\"row\">\n                        <div className=\"column first\">Id:</div>\n                        <div className={this.props.isEditOn ? \"editedColumn\" : \"column\"}>{plant.id}</div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"column first\">Name:</div>\n                        <div className=\"column\">\n                        { this.props.isEditOn\n                            ?\n                            <input type=\"text\" name=\"name\" value={plant.name} onChange={this.handleInput}/>\n                            :\n                            <div>{plant.name}</div>\n                        }\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"column first\">Next watering:</div>\n                        <div className={this.props.isEditOn ? \"editedColumn\" : \"column\"}>\n                            {moment(plant.watering.nextTimeProcessed).format(defaultDateFormat)}\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"column first\">Next spraing:</div>\n                        <div className={this.props.isEditOn ? \"editedColumn\" : \"column\"}>\n                            {moment(plant.spraing.nextTimeProcessed).format(defaultDateFormat)}\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"column first\">Next feeding:</div>\n                        <div className={this.props.isEditOn ? \"editedColumn\" : \"column\"}>\n                            {moment(plant.feeding.nextTimeProcessed).format(defaultDateFormat)}\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"column first\">Place:</div>\n                        <div className=\"column\">\n                        { this.props.isEditOn\n                            ?\n                            <select value={plant.place} name=\"place\" onChange={this.handleInput}>\n                                <option value=\"livingRoom\">Living room</option>\n                                <option value=\"diningRoom\">Dining room</option>\n                                <option value=\"bedroom\">Bedroom</option>\n                                <option value=\"kitchen\">Kitchen</option>\n                                <option value=\"hall\">Hall</option>\n                                <option value=\"balcony\">Balcony</option>\n                            </select>\n                            :\n                            <div>{this.formatIntervalString(plant.place)}</div>\n                        }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"plantDescription\">\n                    <div className=\"row\">\n                        <div  className=\"column first\">Watering interval:</div>\n                        <div className=\"column\">\n                        { this.props.isEditOn\n                            ?\n                            <select className=\"column\" value={plant.watering.interval}\n                                    name=\"watering\" onChange={(event) => this.handleIntervalSelect(event,\"watering\")} >\n                                <option value=\"everyday\">Everyday</option>\n                                <option value=\"onceAWeek\">Once a week</option>\n                                <option value=\"twiceAWeek\">Twice a week</option>\n                                <option value=\"threeTimesAWeek\">Three times a week</option>\n                                <option value=\"onceAMonth\">Once a month</option>\n                            </select>\n                            :\n                            <div className=\"column\">\n                                {this.formatIntervalString(plant.watering.interval)}\n                            </div>\n                        }\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div  className=\"column first\">\n                            Last watering:\n                        </div>\n                        <div className=\"column dateInputColumn\">\n                        { this.props.isEditOn\n                            ?\n                            <DatePicker\n                                selected={Date.parse(plant.watering.lastTimeProcessed)}\n                                        onChange={(date) => this.handleProcessDateChange(date, \"watering\")}\n                                        name=\"watering\"\n                                        placeholderText=\"Select date and time\"\n                                        maxDate={new Date()}\n                                        dateFormat=\"MM/dd/yyyy hh:mm\"\n                                        showTimeSelect\n                                        popperPlacement=\"bottom\"\n                                        customInput={<CustomInput />}\n                            />\n                            :\n                            <div className=\"column\">\n                                {moment(plant.watering.lastTimeProcessed).format(defaultDateFormat)}\n                            </div>\n                        }\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div  className=\"column first\">Spraing interval:</div>\n                        <div className=\"column\">\n                            { this.props.isEditOn\n                                ?\n                                <select className=\"column\" value={plant.spraing.interval}\n                                        name=\"spraing\" onChange={(event) => this.handleIntervalSelect(event, \"spraing\")} >\n                                    <option value=\"everyday\">Everyday</option>\n                                    <option value=\"onceAWeek\">Once a week</option>\n                                    <option value=\"twiceAWeek\">Twice a week</option>\n                                    <option value=\"threeTimesAWeek\">Three times a week</option>\n                                    <option value=\"onceAMonth\">Once a month</option>\n                                </select>\n                                :\n                                <div className=\"column\">\n                                    {this.formatIntervalString(plant.spraing.interval)}\n                                </div>\n                            }\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div  className=\"column first\">Last spraing:</div>\n                        <div className=\"column\">\n                        { this.props.isEditOn\n                            ?\n                            <DatePicker selected={Date.parse(plant.spraing.lastTimeProcessed)}\n                                        onChange={(date) => this.handleProcessDateChange(date, \"spraing\")}\n                                        name=\"spraing\"\n                                        placeholderText=\"Select date and time\"\n                                        maxDate={new Date()}\n                                        dateFormat=\"MM/dd/yyyy hh:mm\"\n                                        showTimeSelect\n                                        popperPlacement=\"bottom\"\n                                        customInput={<CustomInput />}\n                            />\n                            :\n                            <div className=\"column\">\n                                {moment(plant.spraing.lastTimeProcessed).format(defaultDateFormat)}\n                            </div>\n                        }\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div  className=\"column first\">Feeding interval:</div>\n                        <div className=\"column\">\n                        { this.props.isEditOn\n                            ?\n                            <select className=\"column\" value={plant.feeding.interval}\n                                    name=\"feeding\" onChange={(event) => this.handleIntervalSelect(event, \"feeding\")} >\n                                <option value=\"everyday\">Everyday</option>\n                                <option value=\"onceAWeek\">Once a week</option>\n                                <option value=\"twiceAWeek\">Twice a week</option>\n                                <option value=\"threeTimesAWeek\">Three times a week</option>\n                                <option value=\"onceAMonth\">Once a month</option>\n                            </select>\n                            :\n                            <div>{this.formatIntervalString(this.props.plant.feeding.interval)}</div>\n                        }\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div  className=\"column first\">Last feeding:</div>\n                        <div className=\"column\">\n                        { this.props.isEditOn\n                            ?\n                            <DatePicker selected={Date.parse(plant.feeding.lastTimeProcessed)}\n                                        onChange={(date) => this.handleProcessDateChange(date, \"feeding\")}\n                                        name=\"feeding\"\n                                        placeholderText=\"Select date and time\"\n                                        maxDate={new Date()}\n                                        dateFormat=\"MM/dd/yyyy hh:mm\"\n                                        showTimeSelect\n                                        popperPlacement=\"bottom\"\n                                        customInput={<CustomInput />}\n                            />\n                            :\n                            <div className=\"column\">\n                                {moment(plant.feeding.lastTimeProcessed).format(defaultDateFormat)}\n                            </div>\n                        }\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div  className=\"column first\">Notes:</div>\n                        <div className=\"column\">\n                        { this.props.isEditOn\n                            ?\n                            <textarea name=\"notes\" value={plant.notes} onChange={this.handleInput}/>\n                            :\n                            <div className=\"column\">{plant.notes}</div>\n                        }\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    {\n                        this.props.isEditOn\n                        ?\n                        <div className=\"buttonsContainer\">\n                            <button className=\"saveButton\" onClick={() => this.props.submitUpdatedPlantForm(this.state.plant)}>\n                                <img src=\"/icons/floppy-disk.png\" alt=\"\"/>\n                            </button>\n                            <button className=\"cancelButton\" onClick={this.props.handleCancelButton}>\n                                <img src=\"/icons/cancel.png\" alt=\"\"/>\n                            </button>\n                        </div>\n                        :\n                        <div className=\"buttonsContainer\">\n                            <button className=\"editButton\" onClick={this.props.handleEditButton}>\n                            <img src=\"/icons/edit-icon.png\" alt=\"\"/>\n                            </button>\n                            <button className=\"deleteButton\" onClick={this.props.handleDeleteButton}>\n                            <img src=\"/icons/trash.png\" alt=\"\"/>\n                            </button>\n                        </div>\n                    }\n                </div>\n            </div>\n            )\n    }\n}\n\nexport default PlantFullDescription;","import React from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from 'react-router-dom';\nimport {AuthContext} from \"../../Context/auth\";\n\nimport PlantButtons from \"../SharedComponents/PlantButtons/PlantButtons\";\nimport PlantPhoto from \"../SharedComponents/PlantPhoto/PlantPhoto\";\nimport AddNewPlantPhoto from \"./AddNewPlantPhoto/AddNewPlantPhoto\";\nimport GoHomeButton from \"../SharedComponents/GoHomeButton/GoHomeButton\";\nimport PlantFullDescription from \"./PlantFullDescription/PlantFullDescription\";\n\nimport '../SharedComponents/PlantShortDescription/plantShortDescription.scss';\nimport './plantPage.scss';\n\nclass PlantPage extends React.Component {\n    state = {\n        plantById: {},\n        loaded: false,\n        redirectToHome: false,\n        isEditOn: false\n    }\n\n    static contextType = AuthContext;\n\n    fetchPlant = () => {\n        const plantId = this.props.match.params.plantid;\n\n        axios.get(`plants/${plantId}`,\n            {\n                headers:\n                    {\n                        Authorization: `Bearer ${this.context.authTokens.access_token}`\n                    }\n            })\n            .then(res => this.setState({\n                plantById: res.data,\n                loaded: true\n            }))\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    componentDidMount(){\n      this.fetchPlant();\n    }\n\n    handleEditButton = () => {\n        this.setState({\n            isEditOn: true\n        })\n    }\n\n    submitUpdatedPlantForm = (plant) => {\n\n        axios.put(`plants/${plant.id}`,\n            {...plant},{\n                headers:\n                    {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${this.context.authTokens.access_token}`\n                    }\n                })\n            .then(x => this.setState({\n                isEditOn: false\n            }))\n            .then(() => this.fetchPlant())\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    handleCancelButton = () => {\n        this.setState(\n            {\n                isEditOn: false\n            }\n        )\n    }\n\n    handleDeleteButton = () => {\n        axios.delete(`plants/${this.state.plantById.id}`,\n            {\n                headers:\n                    {\n                        Authorization: `Bearer ${this.context.authTokens.access_token}`\n                    }\n            })\n            .then(x => console.log(\"Plant deleted\"))\n            .then(res => this.setState(\n                {\n                    redirectToHome: true\n                }\n            ))\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    render(){\n        const { redirectToHome } = this.state;\n\n        if (redirectToHome) {\n            return <Redirect to=\"/\" />\n        }\n\n        if (this.state.loaded) {\n            return (\n                <div className=\"plantViewPageBody\">\n                    <PlantPhoto fullDescriptionView={true}/>\n                    <AddNewPlantPhoto/>\n                    <PlantButtons plantId={this.state.plantById.id}\n                                  fullDescriptionView={true}\n                                  plantProcessTriggered={() => this.fetchPlant() }/>\n                    <PlantFullDescription\n                        plant={this.state.plantById}\n                        isEditOn={this.state.isEditOn}\n                        handleEditButton={this.handleEditButton}\n                        handleDeleteButton={this.handleDeleteButton}\n                        handleCancelButton={this.handleCancelButton}\n                        submitUpdatedPlantForm={this.submitUpdatedPlantForm}\n                    />\n                    <GoHomeButton/>\n                </div>\n            )\n        }\n        else{\n            return null;\n        }\n    }\n}\n\nexport default PlantPage;","import React from 'react';\nimport './styles.scss';\n\nfunction Footer () {\n    return(\n        <div className=\"footer\">\n            <p className=\"footer-name\">\t&copy; Szajos</p>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport axios from 'axios';\nimport DatePicker from \"react-datepicker\";\nimport {Redirect} from \"react-router-dom\";\nimport CreateNewPlantDto, {intervalsMap} from './CreateNewPlantDto';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport GoHomeButton from \"../SharedComponents/GoHomeButton/GoHomeButton\";\nimport CustomInput from \"./CustomInput/CustomInput\";\nimport './newPlantPage.scss';\nimport {AuthContext} from \"../../Context/auth\";\n\nconst moment = require('moment');\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass NewPlantPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            plant: props.plant ? props.plant : this.defaultEmptyPlant(),\n            redirectToHome: false,\n            open: false\n        };\n    }\n\n    static contextType = AuthContext;\n\n    handleClick = () => this.setState({ open: true })\n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({ open: false })\n    }\n\n    defaultEmptyPlant = () => ({\n        name: '',\n        wateringInterval: '',\n        lastWatering: '',\n        nextWatering: '',\n        spraingInterval: '',\n        lastSpraing: '',\n        nextSpraing: '',\n        feedingInterval: '',\n        lastFeeding: '',\n        nextFeeding: '',\n        place: '',\n        notes: ''\n    })\n\n    handleDateChange = (date, name) => {\n        date = moment(date).format();\n\n        this.setState({\n            plant: {\n                ...this.state.plant,\n                [name]: date\n            }\n        }, () => this.checkAction(this.state.plant)\n        )\n    }\n\n    handleInput = (event) => {\n        this.setState({\n                plant: {\n                    ...this.state.plant,\n                    [event.target.name]: event.target.value\n                }\n            }, () => this.checkAction(this.state.plant)\n        )\n    }\n\n    calculateNextAction = (previousAction, interval) => {\n        let nextAction;\n\n        nextAction = moment(previousAction).add(interval[0], interval[1]).format();\n\n        return nextAction;\n    }\n\n    checkAction = (plant) => {\n        if (plant.lastWatering && plant.wateringInterval){\n            let nextWatering = this.calculateNextAction(plant.lastWatering, intervalsMap.get(this.state.plant.wateringInterval));\n            this.setState({\n                plant: {\n                    ...this.state.plant,\n                    nextWatering: nextWatering\n                }\n            })\n        }\n        if (plant.lastSpraing && plant.spraingInterval){\n            let nextSpraing = this.calculateNextAction(plant.lastSpraing, intervalsMap.get(this.state.plant.spraingInterval));\n            this.setState({\n                plant: {\n                    ...this.state.plant,\n                    nextSpraing: nextSpraing\n                }\n            })\n        }\n        if (plant.lastFeeding && plant.feedingInterval){\n            let nextFeeding = this.calculateNextAction(plant.lastFeeding, intervalsMap.get(this.state.plant.feedingInterval));\n            this.setState({\n                plant: {\n                    ...this.state.plant,\n                    nextFeeding: nextFeeding\n                }\n            })\n        }\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        const plant = CreateNewPlantDto.fromNewPlantForm(this.state.plant);\n\n        axios.post(`${process.env.REACT_APP_AXIOS_URL}/plants`,\n            {...plant},{\n            headers:\n                {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${this.context.authTokens.access_token}`\n            }})\n            .then(res => {\n                console.log(res);\n                console.log(plant);\n            })\n            .then(res => this.setState(\n                {\n                    redirectToHome: true\n                }\n            ))\n            .catch(error => {\n                this.handleClick();\n                console.log(error)\n            })\n    }\n\n\n    render() {\n        const {plant} = this.state;\n        const {open} = this.state;\n        const { redirectToHome } = this.state;\n\n        if (redirectToHome) {\n            return <Redirect to=\"/\" />\n        }\n\n        return (\n            <div className=\"newPlantFormPage\">\n                <Snackbar open={open} autoHideDuration={6000} onClose={this.handleClose} anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n                    <Alert onClose={this.handleClose} severity=\"warning\">\n                        Please fill all fields with * and submit.\n                    </Alert>\n                </Snackbar>\n                <div>\n                    <h1>NEW PLANT FORM</h1>\n                    <form className=\"newPlantForm\" onSubmit={this.handleSubmit}>\n                        <label className=\"required-field\">Name</label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            value={plant.name}\n                            onChange={this.handleInput}\n                        />\n                        <label className=\"required-field\">Watering interval</label>\n                        <select value={plant.wateringInterval} name=\"wateringInterval\" onChange={this.handleInput} >\n                            <option value=''>Choose an option...</option>\n                            <option value=\"everyday\">Everyday</option>\n                            <option value=\"onceAWeek\">Once a week</option>\n                            <option value=\"twiceAWeek\">Twice a week</option>\n                            <option value=\"threeTimesAWeek\">Three times a week</option>\n                            <option value=\"onceAMonth\">Once a month</option>\n                        </select>\n                        <label className=\"required-field\">Last watering</label>\n                        <DatePicker selected={Date.parse(this.state.plant.lastWatering)}\n                                    onChange={(date) => this.handleDateChange(date, \"lastWatering\")}\n                                    name=\"lastWatering\"\n                                    placeholderText=\"Select date and time\"\n                                    maxDate={new Date()}\n                                    dateFormat=\"MM/dd/yyyy HH:mm\"\n                                    showTimeSelect\n                                    popperPlacement=\"bottom\"\n                                    customInput={<CustomInput calendarIcon=\"true\"  />}\n                            />\n                        <label>NextWatering</label>\n                        <p>{this.state.plant.nextWatering}</p>\n                        <label className=\"required-field\">Spraing interval</label>\n                        <select value={plant.spraingInterval} name=\"spraingInterval\" onChange={this.handleInput}>\n                            <option value=''>Choose an option...</option>\n                            <option value=\"everyday\">Everyday</option>\n                            <option value=\"onceAWeek\">Once a week</option>\n                            <option value=\"twiceAWeek\">Twice a week</option>\n                            <option value=\"threeTimesAWeek\">Three times a week</option>\n                            <option value=\"onceAMonth\">Once a month</option>\n                        </select>\n                        <label className=\"required-field\">Last spraing</label>\n                        <DatePicker selected={Date.parse(this.state.plant.lastSpraing)}\n                                    onChange={(date) => this.handleDateChange(date, \"lastSpraing\")}\n                                    name=\"lastSpraing\"\n                                    placeholderText=\"Select date and time\"\n                                    maxDate={new Date()}\n                                    dateFormat=\"MM/dd/yyyy HH:mm\"\n                                    showTimeSelect\n                                    popperPlacement=\"bottom\"\n                                    customInput={<CustomInput calendarIcon=\"true\" />}\n                            />\n                        <label>Next spraing</label>\n                        <p>{this.state.plant.nextSpraing}</p>\n                        <label className=\"required-field\">Feeding interval</label>\n                        <select value={plant.feedingInterval} name=\"feedingInterval\" onChange={this.handleInput}>\n                            <option value=''>Choose an option...</option>\n                            <option value=\"everyday\">Everyday</option>\n                            <option value=\"onceAWeek\">Once a week</option>\n                            <option value=\"twiceAWeek\">Twice a week</option>\n                            <option value=\"threeTimesAWeek\">Three times a week</option>\n                            <option value=\"onceAMonth\">Once a month</option>\n                        </select>\n                        <label className=\"required-field\">Last feeding</label>\n                         <DatePicker selected={Date.parse(this.state.plant.lastFeeding)}\n                                     onChange={(date) => this.handleDateChange(date, \"lastFeeding\")}\n                                     name=\"lastFeeding\"\n                                     placeholderText=\"Select date and time\"\n                                     maxDate={new Date()}\n                                     dateFormat=\"MM/dd/yyyy HH:mm\"\n                                     showTimeSelect\n                                     popperPlacement=\"bottom\"\n                                     customInput={<CustomInput calendarIcon=\"true\" />}\n                                 />\n                        <label>Next feeding</label>\n                        <p>{this.state.plant.nextFeeding}</p>\n                        <label>Place</label>\n                        <select value={plant.place} name=\"place\" onChange={this.handleInput}>\n                            <option value=''>Choose a place..</option>\n                            <option value=\"livingRoom\">Living room</option>\n                            <option value=\"diningRoom\">Dining room</option>\n                            <option value=\"bedroom\">Bedroom</option>\n                            <option value=\"kitchen\">Kitchen</option>\n                            <option value=\"hall\">Hall</option>\n                            <option value=\"balcony\">Balcony</option>\n                        </select>\n                        <label>Notes</label>\n                        <textarea name=\"notes\" value={plant.notes} onChange={this.handleInput} placeholder=\"Put your notes here...\"/>\n                        <input type=\"submit\" value=\"SUBMIT\" className=\"submit-button\"/>\n                        <GoHomeButton />\n                    </form>\n                    {console.log(plant)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NewPlantPage;","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n\nimport './placeTile.scss';\n\nclass PlaceTile extends React.Component {\n\n    state = {\n        filterByPlace: false\n    }\n\n    handleClick = () => {\n        this.setState(\n            {\n                filterByPlace: true\n            }\n        )\n    }\n\n    render() {\n        if (this.state.filterByPlace) {\n              return <Redirect to={{\n                  pathname: '/',\n                  state: {\n                      place: this.props.place,\n                      filterByPlace: true\n                  }\n              }} />\n             }\n         else{\n             return (\n                <button className=\"findByPlaceTile\" onClick={this.handleClick}>\n                       <img src={this.props.img} alt=\"\"/>\n                      <p>{this.props.name}</p>\n                  </button>\n            )\n          }\n    }\n}\n\nexport default PlaceTile;\n\n","import React from 'react';\n\nimport GoHomeButton from \"../SharedComponents/GoHomeButton/GoHomeButton\";\nimport PlaceTile from \"./PlaceTile/PlaceTile\";\nimport './findByPlacePage.scss';\n\nclass FindByPlacePage extends React.Component{\n\n    componentDidMount(){\n            document.body.style.backgroundColor = \"#F2F2F2\";\n\n        }\n\n    componentWillUnmount(){\n        document.body.style.backgroundColor = null;\n    }\n\n    render(){\n            return(\n                <div className=\"findByPlacePage\">\n                    <h1>Choose a place to see all the plants living there...</h1>\n                    <div className=\"placeTiles--list\">\n                        <PlaceTile img=\"/icons/armchair.png\" name=\"Living Room\" place=\"livingRoom\" />\n                        <PlaceTile img=\"/icons/bed.png\" name=\"Bedroom\" place=\"bedroom\" />\n                        <PlaceTile img=\"/icons/dinner.png\" name=\"Dining Room\"  place=\"diningRoom\" />\n                        <PlaceTile img=\"/icons/kitchen.png\" name=\"Kitchen\" place=\"kitchen\" />\n                        <PlaceTile img=\"/icons/balcony.png\" name=\"Balcony\"  place=\"balcony\" />\n                        <PlaceTile img=\"/icons/hall.png\" name=\"Hall\" place=\"hall\" />\n                    </div>\n                    <GoHomeButton />\n                </div>\n            )\n    }\n}\n\nexport default FindByPlacePage;","import React, {useState} from 'react';\nimport {useForm} from 'react-hook-form';\nimport {Link} from \"react-router-dom\";\n\nimport AppLogo from \"../../../SharedComponents/AppLogo/AppLogo\";\nimport '../authForm.scss';\n\nfunction LoginForm(props) {\n\n    const [userEmail, setUserEmail] = useState(\"\");\n    const [userPassword, setPassword] = useState(\"\");\n\n    const { register, errors, handleSubmit } = useForm();\n\n    return(\n        <div className=\"authFormPage\" style={{backgroundImage: `url(/plantsPhotos/homeJungle.jpg)` }}>\n\n            <AppLogo />\n            <div className=\"card\">\n                <div className=\"logoImgContainer\">\n                    <img alt=\"\" src=\"/icons/user.png\" />\n                </div>\n                <form onSubmit={handleSubmit(() => props.onSubmit(userEmail, userPassword))}>\n                    <input\n                        name=\"email\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        onChange={ e => {\n                            setUserEmail(e.target.value)\n                        }}\n                        ref={\n                            register({\n                                required: true,\n                                pattern: /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/\n                            })\n                        }\n                    />\n                    {errors.email && errors.email.type === 'required' && (\n                        <p>Required</p>\n                    )}\n                    {errors.email && errors.email.type === 'pattern' && (\n                        <p>Please enter valid email address (e.g. plantswife@gmail.com)</p>\n                    )}\n                    <input\n                        name=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        onChange={ e => {\n                            setPassword(e.target.value)\n                        }}\n                        ref={\n                            register({\n                                required: true,\n                                pattern: /^(?=.*\\d).{4,8}$/\n                            })\n                        }\n                    />\n                    {errors.password && errors.password.type === 'required' && (\n                        <p>Required</p>\n                    )}\n                    {errors.password && errors.password.type === 'pattern' && (\n                        <p>Password must be between 4 and 8 digits long and include at least one numeric digit.</p>\n                    )}\n\n                    <button type=\"submit\">Login</button>\n                </form>\n                <Link to=\"/signUp\">Don't have an account?</Link>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginForm;","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport LoginForm from \"../AuthForms/LoginForm/LoginForm\";\nimport Footer from '../../Footer/Footer';\nimport {useAuth} from \"../../../Context/auth\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction Login(props){\n\n    const [isLoggedIn, setLoggedIn] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const handleClick = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    const { setAuthTokens } = useAuth();\n\n    const referer = props.location.state?.referer || '/';\n    ///redirect to previously entered page or a home page\n\n    function postLogin(userEmail, userPassword) {\n        axios.post(`${process.env.REACT_APP_AXIOS_URL}/auth/login`, {\n            \"email\": userEmail,\n            \"password\": userPassword\n        }).then(result => {\n            if (result.status === 201) {\n                setAuthTokens(result.data);\n                setLoggedIn(true);\n                console.log(result.data)\n            } else {\n                handleClick();\n            }\n        }).catch(e => {\n            handleClick();\n        });\n    }\n\n        if (isLoggedIn) {\n            return <Redirect to={referer} />;\n        }\n\n       return(\n           <div>\n               <Snackbar open={open} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n                   <Alert onClose={handleClose} severity=\"error\">\n                       Email or password are incorrect! Try again.\n                   </Alert>\n               </Snackbar>\n               <LoginForm onSubmit={postLogin}/>\n               <Footer />\n            </div>\n       )\n}\n\nexport default Login;","import React, {useState} from 'react';\nimport {useForm} from 'react-hook-form';\nimport {Link} from \"react-router-dom\";\n\nimport AppLogo from \"../../../SharedComponents/AppLogo/AppLogo\";\nimport '../authForm.scss';\n\nfunction SignUpForm(props) {\n\n    const [userName, setUserName] = useState(\"\");\n    const [userEmail, setUserEmail] = useState(\"\");\n    const [userPassword, setPassword] = useState(\"\");\n\n    const { register, getValues, errors, handleSubmit } = useForm();\n\n\n    return(\n        <div className=\"authFormPage\" style={{backgroundImage: `url(/plantsPhotos/homeJungle.jpg)`}}>\n            <AppLogo />\n            <div className=\"card\">\n                <div className=\"logoImgContainer\">\n                    <img alt=\"\" src=\"/icons/user.png\" />\n                </div>\n                <form onSubmit={handleSubmit(() => props.onSubmit(userName, userEmail, userPassword))}>\n                    <input\n                        name=\"name\"\n                        type=\"text\"\n                        placeholder=\"Name\"\n                        onChange={ e => {\n                            setUserName(e.target.value)\n                        }}\n                        ref={\n                            register({\n                                required: true,\n                                minLength: 4\n                            })\n                        }\n                    />\n                    {errors.name && errors.name.type === 'required' && (\n                        <p>Required</p>\n                    )}\n                    {errors.name && errors.name.type === 'minLength' && (\n                        <p role=\"alert\">Name must be min 4 digits long.</p>\n                    )}\n                    <input\n                        name=\"email\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        onChange={ e => {\n                            setUserEmail(e.target.value)\n                        }}\n                        ref={\n                            register({\n                                required: true,\n                                pattern: /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/\n                                // pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n                            })\n                        }\n                    />\n                    {errors.email && errors.email.type === 'required' && (\n                        <p>Required</p>\n                    )}\n                    {errors.email && errors.email.type === 'pattern' && (\n                        <p>Please enter valid email address (e.g. plantswife@gmail.com)</p>\n                    )}\n                    <input\n                        name=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        onChange={ e => {\n                            setPassword(e.target.value)\n                        }}\n                        ref={\n                            register({\n                                required: true,\n                                pattern: /^(?=.*\\d).{4,8}$/\n                                // Password must be between 4 and 8 digits long and include at least one numeric digit.\n                            })\n                        }\n                    />\n                    {errors.password && errors.password.type === 'required' && (\n                        <p>Required</p>\n                    )}\n                    {errors.password && errors.password.type === 'pattern' && (\n                        <p>Password must be between 4 and 8 digits long and include at least one numeric digit.</p>\n                    )}\n\n                    <input\n                        name=\"repeatPassword\"\n                        type=\"password\"\n                        placeholder=\"Repeat password\"\n                        ref={\n                            register({\n                                required: \"Required\",\n                                validate: (value) => {\n                                    if (value === getValues().password) {\n                                        return true;\n                                    } else {\n                                        return \"Passwords don't match.\";\n                                    }\n                                }\n                            })\n                        }\n                    />\n                    {errors.repeatPassword && <p>{ errors.repeatPassword.message }</p> }\n\n                    <button type=\"submit\">Sign Up</button>\n                </form>\n                <Link to=\"/login\">Already have an account?</Link>\n            </div>\n        </div>\n    )\n}\n\nexport default SignUpForm;","import React, {useState} from 'react';\nimport {useAuth} from \"../../../Context/auth\";\nimport axios from \"axios\";\nimport {Redirect} from \"react-router-dom\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport SignUpForm from \"../AuthForms/SignUpForm/SignUpForm\";\nimport Footer from '../../Footer/Footer';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction SignUp(){\n\n    const [isSignedUp, setSignedUp] = useState(false);\n    const [open, setOpen] = useState(false);\n\n    const handleClick = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    const { setAuthTokens } = useAuth();\n\n    function postSignUp(userName, userEmail, userPassword) {\n\n        axios.post(`${process.env.REACT_APP_AXIOS_URL}/auth/register`,\n            {\n                \"name\": userName,\n                \"email\": userEmail,\n                \"password\": userPassword\n            })\n            .then(result => {\n                if (result.status === 201) {\n                    setAuthTokens(result.data);\n                    setSignedUp(true);\n                } else {\n                    handleClick();\n                }\n            })\n            .catch(e => {\n                handleClick();\n            });\n    }\n\n    if (isSignedUp) {\n        return <Redirect to=\"/\" />;\n    } else{\n        return(\n            <div>\n                <Snackbar open={open} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n                    <Alert onClose={handleClose} severity=\"error\">\n                        Email is already taken! Try with another email.\n                    </Alert>\n                </Snackbar>\n                <SignUpForm onSubmit={postSignUp} />\n                <Footer />\n            </div>\n        )\n    }\n}\n\nexport default SignUp;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { useAuth } from \"../../../Context/auth\";\n\nfunction PrivateRoute( {component: Component, ...rest} ) {\n\n    const { authTokens } = useAuth(); //get tokens from context, having means that authenticated\n\n    return(\n        <Route\n            {...rest}\n            render={ props =>\n                authTokens\n                    ?\n                    (\n                    <Component {...props} />\n                    )\n                    :\n                    (\n                        <Redirect to={{ pathname: \"/login\", state: { referer: props.location } }} />\n                    )\n            }\n        />\n    );\n}\n\nexport default PrivateRoute;","import React, {useState} from 'react';\nimport {\n    BrowserRouter as Router,\n    HashRouter,\n    Switch,\n    Route,\n} from \"react-router-dom\";\n\nimport HomePage from \"./Components/HomePage/HomePage\";\nimport PlantPage from \"./Components/PlantPage/PlantPage\";\nimport './App.css';\nimport Footer from \"./Components/Footer/Footer\";\nimport NewPlantPage from \"./Components/NewPlantPage/NewPlantPage\";\nimport FindByPlacePage from \"./Components/FilterByPlacePage/FindByPlacePage\";\nimport Login from \"./Components/Auth/Login/Login\";\nimport SignUp from \"./Components/Auth/SignUp/SignUp\";\nimport {AuthContext} from \"./Context/auth\";\nimport PrivateRoute from \"./Components/Auth/PrivateRoute/PrivateRoute\";\n\n\nfunction App(props) {\n\n    const existingTokens = JSON.parse(localStorage.getItem(\"tokens\"));\n    const [authTokens, setAuthTokens] = useState(existingTokens);\n\n    const setTokens = (data) => {\n        data ? localStorage.setItem(\"tokens\", JSON.stringify(data)) : localStorage.clear()\n        setAuthTokens(data);\n    }\n\n    return (\n        <div className=\"App\">\n            <HashRouter basename=\"/\">\n            <AuthContext.Provider value={{authTokens, setAuthTokens: setTokens}}>\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/login\" component={Login}/>\n                        <Route exact path=\"/signUp\" component={SignUp}/>\n                        <PrivateRoute exact path=\"/createNewPlant\" component={NewPlantPage}/>\n                        <PrivateRoute exact path=\"/filterByPlace\" component={FindByPlacePage}/>\n                        <PrivateRoute exact path=\"/plantViewPage/:plantid\" component={PlantPage}/>\n                        <PrivateRoute exact path=\"/\" component={HomePage}/>\n                    </Switch>\n                </Router>\n            </AuthContext.Provider>\n            <Footer/>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport './index.css';\nimport App from './App';\n\naxios.defaults.baseURL=process.env.REACT_APP_AXIOS_URL;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}